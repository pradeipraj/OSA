USER-STORIES

User Registration and Authentication
As a new user, I want to be able to register for an account on the online shopping app.

User Registration Acceptance Criteria:
	1. There should be a registration API endpoint (/api/users/register).
	2. The endpoint should validate the required user details (e.g., email, password) and return a success message upon successful registration.
	3. As a registered user, I want to be able to log in to the online shopping app.

User Log in Acceptance Criteria:
	1. There should be a login API endpoint (/api/users/login).
	2. The endpoint should validate the user's credentials and return a JWT token upon successful authentication.
	3. The JWT token should be used for subsequent authorized requests.

User Profile
As a user, I want to view my profile information.
	Acceptance Criteria:
	1. There should be an API endpoint (osa/api/users/{userId}) to retrieve user profile details.
	2. The endpoint should return user-specific information, such as username, email, and registration date.

As a user, I want to update my profile information.
	Acceptance Criteria:
	1. There should be an API endpoint (osa/api/users/{userId}) allowing users to update their profile details.
	2. The endpoint should validate and update the specified user attributes.

As a user, I want to have specific permissions based on my role.
	Acceptance Criteria:
	1. Users with the Admin role should have access to administrative functionalities.
	2. Users with the Vendor role should have access to vendor-specific functionalities.
	3. Regular users should have access to basic functionalities.

Security
As a user, I want to ensure that my password is securely stored.
	Acceptance Criteria:
	1. Passwords should be hashed using a secure algorithm (e.g., bcrypt) before storage.
	2. As a user, I want all communications with the microservice to be secure.

Error Handling
As a user, I want to receive clear error messages when something goes wrong.
	Acceptance Criteria:
	1. API responses should include meaningful error messages and appropriate HTTP status codes.
	2. As a developer, I want to log errors for debugging purposes.
	3. Errors and exceptions should be logged for analysis and debugging.

Documentation
As a developer, I want to have comprehensive API documentation.
	Acceptance Criteria:
	1. API documentation should be created using Swagger or OpenAPI.
	2. The documentation should include details about each endpoint, request parameters, and response structures.

Testing
As a developer, I want to ensure the reliability and stability of the microservice through testing.
	Acceptance Criteria:
	1. Implement unit test covering all major functionalities.